{"version":3,"file":"js\\chunks\\34.075e6dec89728fed9412.js","mappings":"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","sources":["webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons/es/icons/PlusOutlined.js","webpack://monetize-frontend-admin-panel/./node_modules/antd/lib/divider/index.js","webpack://monetize-frontend-admin-panel/./node_modules/antd/lib/divider/style/index.js","webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","webpack://monetize-frontend-admin-panel/./src/features/offers/data/countries.ts","webpack://monetize-frontend-admin-panel/./src/features/offers/components/form/index.module.css?c8af","webpack://monetize-frontend-admin-panel/./src/features/offers/components/form/index.tsx","webpack://monetize-frontend-admin-panel/./src/features/offers/components/form/form-display.tsx","webpack://monetize-frontend-admin-panel/./src/features/offers/data/placements.ts","webpack://monetize-frontend-admin-panel/./src/features/offers/components/media-assets/index.tsx","webpack://monetize-frontend-admin-panel/./src/features/offers/components/media-assets/index.module.css?a0c8","webpack://monetize-frontend-admin-panel/./src/features/offers/components/active-posts/index.tsx","webpack://monetize-frontend-admin-panel/./src/features/offers/redux/selectors.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Divider = function Divider(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(_configProvider.ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'horizontal' : _props$type,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n      orientationMargin = props.orientationMargin,\n      className = props.className,\n      children = props.children,\n      dashed = props.dashed,\n      plain = props.plain,\n      restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n  var prefixCls = getPrefixCls('divider', customizePrefixCls);\n  var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n  var hasChildren = !!children;\n  var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  var classString = (0, _classnames[\"default\"])(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), (0, _defineProperty2[\"default\"])(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), _classNames), className);\n  var innerStyle = (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n  return /*#__PURE__*/React.createElement(\"div\", (0, _extends2[\"default\"])({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner-text\"),\n    style: innerStyle\n  }, children));\n};\n\nvar _default = Divider;\nexports[\"default\"] = _default;","\"use strict\";\n\nrequire(\"../../style/default.less\");\n\nrequire(\"./index.less\");","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\n\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","export const countriesData = ['US', 'RU'];\n","// extracted by mini-css-extract-plugin\nexport default {\"formLayout\":\"formLayout-Mwl2j\",\"tabs\":\"tabs-5ljna\",\"formDisplay\":\"formDisplay-xBHTi\",\"form\":\"form-f3sl6\",\"submitButtonFormItem\":\"submitButtonFormItem-awjy0\",\"defaultIconAvatar\":\"defaultIconAvatar-eUNJF\",\"appInfoLayout\":\"appInfoLayout-OV0CN\",\"appInfoDescriptionLayout\":\"appInfoDescriptionLayout-MytDE\",\"appInfoName\":\"appInfoName-OzCxn\",\"appInfoSecondary\":\"appInfoSecondary-WIcjO\",\"specialFormListItem\":\"specialFormListItem-N1_od\",\"addRewardsByCountriesFormItem\":\"addRewardsByCountriesFormItem-WMnA3\",\"inputNumber\":\"inputNumber-WEDQJ\",\"controlButton\":\"controlButton-vMPyZ\"};","import { Button, Divider, Form, Input, InputNumber, Select } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { FC, useEffect, useMemo } from 'react';\r\n\r\nimport { fold } from 'libs/remote';\r\nimport { trimObjectValues } from 'libs/utils';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\n\r\nimport { AppForSelect, OfferInfo, OfferInfoForm } from '../../types';\r\nimport { countriesData } from '../../data/countries';\r\nimport { createOffer, fetchApplicationsForSelect, updateOffer } from '../../redux/slice';\r\nimport { selectApplicationsForSelect } from '../../redux/selectors';\r\n\r\nimport css from './index.module.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst appSelectFolder = fold<AppForSelect[]>(\r\n  (data) => (\r\n    <Select allowClear>\r\n      {data.map((dev) => (\r\n        <Option key={dev.id} value={dev.id}>\r\n          {dev.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  ),\r\n  () => <></>,\r\n  () => <Select loading />,\r\n  () => <Select disabled />\r\n);\r\n\r\ninterface OfferFormProps {\r\n  mode: 'create' | 'update';\r\n  data?: OfferInfo;\r\n}\r\n\r\nconst OfferForm: FC<OfferFormProps> = ({ mode = 'update', data }: OfferFormProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const params = useParams();\r\n  const applicationsForSelect = useAppSelector(selectApplicationsForSelect);\r\n  const { t } = useTranslation('offers');\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchApplicationsForSelect());\r\n  }, [dispatch]);\r\n\r\n  const formFields = useMemo(() => {\r\n    return data\r\n      ? [\r\n          { name: ['appId'], value: data.appId },\r\n          { name: ['budget'], value: data.budget },\r\n          { name: ['androidBaseReward'], value: data.androidBaseReward },\r\n          { name: ['iosBaseReward'], value: data.iosBaseReward },\r\n          {\r\n            name: ['androidRewardByCountry'],\r\n            value: data.androidRewardByCountry\r\n              ? Object.keys(data.androidRewardByCountry).map((country) => ({\r\n                  country: country,\r\n                  price: data.androidRewardByCountry[country],\r\n                }))\r\n              : [],\r\n          },\r\n          {\r\n            name: ['iosRewardByCountry'],\r\n            value: data.iosRewardByCountry\r\n              ? Object.keys(data.iosRewardByCountry).map((country) => ({\r\n                  country: country,\r\n                  price: data.iosRewardByCountry[country],\r\n                }))\r\n              : [],\r\n          },\r\n        ]\r\n      : undefined;\r\n  }, [data]);\r\n\r\n  const onFinish = (values: OfferInfoForm) => {\r\n    const trimmedValues = trimObjectValues<OfferInfoForm>(values);\r\n\r\n    mode === 'create'\r\n      ? dispatch(createOffer(trimmedValues))\r\n      : dispatch(updateOffer({ id: params.offerId, ...trimmedValues }));\r\n  };\r\n\r\n  return (\r\n    <div className={css.formLayout}>\r\n      <Form\r\n        form={form}\r\n        className={css.form}\r\n        name={`developer-${mode}`}\r\n        onFinish={onFinish}\r\n        fields={formFields}\r\n        autoComplete=\"off\"\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          label={<h3>{`${t('form.app')}:`}</h3>}\r\n          name=\"appId\"\r\n          rules={[{ required: true, message: `${t('form.appMessage')}!` }]}\r\n        >\r\n          {appSelectFolder(applicationsForSelect)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{`${t('form.budget')}:`}</h3>}\r\n          name=\"budget\"\r\n          rules={[{ required: true, message: `${t('form.budgetMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Divider orientation=\"left\">iOs</Divider>\r\n\r\n        <Form.Item\r\n          label={<h3>{`${t('form.baseReward')}:`}</h3>}\r\n          name=\"iosBaseReward\"\r\n          rules={[{ required: true, message: `${t('form.baseRewardMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.List name=\"iosRewardByCountry\">\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.length > 0 && (\r\n                <Form.Item style={{ margin: 0 }}>\r\n                  <Divider orientation=\"left\">{t('form.rewardByCountry.title')}</Divider>\r\n                </Form.Item>\r\n              )}\r\n              {fields.map((field) => (\r\n                <div key={field.key} className={css.specialFormListItem}>\r\n                  <Form.Item\r\n                    label={<h3>{`${t('form.rewardByCountry.country')}:`}</h3>}\r\n                    name={[field.name, 'country']}\r\n                    rules={[{ required: true, message: `${t('form.rewardByCountry.countryMessage')}!` }]}\r\n                  >\r\n                    <Select>\r\n                      {countriesData.map((countryCode) => (\r\n                        <Option key={countryCode} value={countryCode}>\r\n                          {countryCode}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label={<h3>{`${t('form.rewardByCountry.price')}:`}</h3>}\r\n                    name={[field.name, 'price']}\r\n                    rules={[{ required: true, message: `${t('form.rewardByCountry.priceMessage')}!` }]}\r\n                  >\r\n                    <InputNumber min={0.1} step={0.1} className={css.inputNumber} />\r\n                  </Form.Item>\r\n                  <Form.Item label=\" \" className=\"remove-button-form-item\">\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Form.Item>\r\n                </div>\r\n              ))}\r\n\r\n              <Form.Item>\r\n                <Button type=\"link\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                  {t('form.rewardByCountry.addButton')}\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Divider orientation=\"left\">Android</Divider>\r\n\r\n        <Form.Item\r\n          label={<h3>{`${t('form.baseReward')}:`}</h3>}\r\n          name=\"androidBaseReward\"\r\n          rules={[{ required: true, message: `${t('form.baseRewardMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.List name=\"androidRewardByCountry\">\r\n          {(fields, { add, remove }) => (\r\n            <>\r\n              {fields.length > 0 && (\r\n                <Form.Item style={{ margin: 0 }}>\r\n                  <Divider orientation=\"left\">{t('form.rewardByCountry.title')}</Divider>\r\n                </Form.Item>\r\n              )}\r\n              {fields.map((field) => (\r\n                <div key={field.key} className={css.specialFormListItem}>\r\n                  <Form.Item\r\n                    label={<h3>{`${t('form.rewardByCountry.country')}:`}</h3>}\r\n                    name={[field.name, 'country']}\r\n                    rules={[{ required: true, message: `${t('form.rewardByCountry.countryMessage')}!` }]}\r\n                  >\r\n                    <Select>\r\n                      {countriesData.map((countryCode) => (\r\n                        <Option key={countryCode} value={countryCode}>\r\n                          {countryCode}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label={<h3>{`${t('form.rewardByCountry.price')}:`}</h3>}\r\n                    name={[field.name, 'price']}\r\n                    rules={[{ required: true, message: `${t('form.rewardByCountry.priceMessage')}!` }]}\r\n                  >\r\n                    <InputNumber min={0.1} step={0.1} className={css.inputNumber} />\r\n                  </Form.Item>\r\n                  <Form.Item label=\" \" className=\"remove-button-form-item\">\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Form.Item>\r\n                </div>\r\n              ))}\r\n\r\n              <Form.Item>\r\n                <Button type=\"link\" onClick={() => add()} icon={<PlusOutlined />}>\r\n                  {t('form.rewardByCountry.addButton')}\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n        </Form.List>\r\n\r\n        <Form.Item className={css.submitButtonFormItem}>\r\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n            {mode === 'create' ? t('createOffer') : t('updateOffer')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfferForm;\r\n","import { Avatar, Button, Divider, Form } from 'antd';\nimport { PlaySquareOutlined } from '@ant-design/icons';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport React, { FC } from 'react';\n\nimport { useAppDispatch } from 'store';\n\nimport { OfferInfo, OfferState } from '../../types';\nimport { updateOfferState } from '../../redux/slice';\n\nimport css from './index.module.css';\n\ninterface OfferFormDisplayProps {\n  data: OfferInfo;\n}\nconst OfferFormDisplay: FC<OfferFormDisplayProps> = ({ data }: OfferFormDisplayProps) => {\n  const dispatch = useAppDispatch();\n\n  const { t: dt } = useTranslation();\n  const { t } = useTranslation('offers');\n\n  const params = useParams();\n\n  const handleChangeStatus = (value: OfferState) => {\n    params.offerId && dispatch(updateOfferState({ offerId: params.offerId, state: value }));\n  };\n\n  const renderStatusControls = () => {\n    if (data.state === 'stopped') return null;\n    if (data.state === 'active') {\n      return (\n        <>\n          <Button className={css.controlButton} onClick={() => handleChangeStatus('paused')}>\n            {t('form.status.setPause')}\n          </Button>\n          <Button className={css.controlButton} type=\"primary\" onClick={() => handleChangeStatus('stopped')} danger>\n            {t('form.status.setStop')}\n          </Button>\n        </>\n      );\n    }\n    if (data.state === 'paused') {\n      return (\n        <>\n          <Button className={css.controlButton} onClick={() => handleChangeStatus('active')}>\n            {t('form.status.setActive')}\n          </Button>\n          <Button className={css.controlButton} type=\"primary\" onClick={() => handleChangeStatus('stopped')} danger>\n            {t('form.status.setStop')}\n          </Button>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className={css.formLayout}>\n      <Form className={css.formDisplay} layout=\"vertical\">\n        <div className={css.appInfoLayout}>\n          <div className={css.appInfoDescriptionLayout}>\n            <h2 className={css.appInfoName}>{data.appName || dt('n/a')}</h2>\n\n            <h4 className={css.appInfoSecondary}>{`${t('form.appId')}: ${data.appId || dt('n/a')}`}</h4>\n\n            <h4 className={css.appInfoSecondary}>{`${t('form.appCategory')}: ${data.appCategory || dt('n/a')}`}</h4>\n          </div>\n          <Avatar src={data.appIconUrl} size={100} icon={<PlaySquareOutlined className={css.defaultIconAvatar} />} />\n        </div>\n\n        <Divider />\n\n        <div className={css.specialFormListItem}>\n          <Form.Item label={<h3>{`${t('form.budget')}:`}</h3>}>\n            <h4>{data.budget || dt('n/a')}</h4>\n          </Form.Item>\n\n          <Form.Item label={<h3>{`${t('form.balance')}:`}</h3>}>\n            <h4>{data.balance || dt('n/a')}</h4>\n          </Form.Item>\n        </div>\n\n        <Divider orientation=\"left\">iOs</Divider>\n\n        <Form.Item label={<h3>{`${t('form.baseReward')}:`}</h3>}>\n          <h4>{data.iosBaseReward || dt('n/a')}</h4>\n        </Form.Item>\n\n        <Form.List name=\"iosRewardByCountry\">\n          {() => (\n            <>\n              {Object.keys(data.iosRewardByCountry || {}).length > 0 && (\n                <Form.Item style={{ margin: 0 }}>\n                  <Divider orientation=\"left\">{t('form.rewardByCountry.title')}</Divider>\n                </Form.Item>\n              )}\n              {Object.keys(data.iosRewardByCountry || {}).map((country) => {\n                return (\n                  <div key={country} className={css.specialFormListItem}>\n                    <Form.Item label={<h3>{`${t('form.rewardByCountry.country')}:`}</h3>}>\n                      <h4>{country}</h4>\n                    </Form.Item>\n                    <Form.Item label={<h3>{`${t('form.rewardByCountry.price')}:`}</h3>}>\n                      <h4>{data.iosRewardByCountry[country]}</h4>\n                    </Form.Item>\n                  </div>\n                );\n              })}\n            </>\n          )}\n        </Form.List>\n\n        <Divider orientation=\"left\">Android</Divider>\n\n        <Form.Item label={<h3>{`${t('form.baseReward')}:`}</h3>}>\n          <h4>{data.androidBaseReward || dt('n/a')}</h4>\n        </Form.Item>\n\n        <Form.List name=\"iosRewardByCountry\">\n          {() => (\n            <>\n              {Object.keys(data.androidRewardByCountry || {}).length > 0 && (\n                <Form.Item style={{ margin: 0 }}>\n                  <Divider orientation=\"left\">{t('form.rewardByCountry.title')}</Divider>\n                </Form.Item>\n              )}\n              {Object.keys(data.androidRewardByCountry || {}).map((country) => {\n                return (\n                  <div key={country} className={css.specialFormListItem}>\n                    <Form.Item label={<h3>{`${t('form.rewardByCountry.country')}:`}</h3>}>\n                      <h4>{country}</h4>\n                    </Form.Item>\n                    <Form.Item label={<h3>{`${t('form.rewardByCountry.price')}:`}</h3>}>\n                      <h4>{data.androidRewardByCountry[country]}</h4>\n                    </Form.Item>\n                  </div>\n                );\n              })}\n            </>\n          )}\n        </Form.List>\n\n        <Form.Item noStyle>\n          <Divider orientation=\"left\">{`${t('form.status.title')}: \"${t(`form.status.${data.state}`)}\"`}</Divider>\n\n          {renderStatusControls()}\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default OfferFormDisplay;\n","export type PlacementsData = Record<string, string[]>;\n\nexport const placementsData: PlacementsData = {\n  TIKTOK: ['FEED'],\n  INSTAGRAM: ['STORY', 'REEL', 'VIDEO', 'FEED'],\n};\n","import { Button, Divider, Form, Select, Upload } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined, UploadOutlined } from '@ant-design/icons';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport React, { FC } from 'react';\n\nimport { CreateOfferMediaAssetForm } from 'features/offers/types';\nimport { Media } from 'features/admin-tasks/media/types';\nimport { createOfferMediaAsset } from 'features/offers/redux/slice';\nimport { placementsData } from 'features/offers/data/placements';\nimport { useAppDispatch } from 'store';\n\nimport css from './index.module.css';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst normFile = (e: any) => {\n  return e && e.file;\n};\n\ninterface MediaAssetsFormProps {\n  data: Media[];\n}\nconst MediaAssetsForm: FC<MediaAssetsFormProps> = ({ data }: MediaAssetsFormProps) => {\n  const dispatch = useAppDispatch();\n\n  const params = useParams();\n\n  const { t: dt } = useTranslation();\n  const { t } = useTranslation('offers');\n\n  const [form] = Form.useForm();\n\n  const handleChangeUpload = () => {};\n\n  const handleRemoveUpload = () => {};\n\n  const beforeUpload = () => false;\n\n  const fileList: UploadFile[] = data.map((media) => ({\n    uid: `${media.id}`,\n    name: `id: ${media.id}, placements: ${Object.keys(media.placements).map((socialNetworkKey) =>\n      media.placements[socialNetworkKey].map((place) => `${socialNetworkKey}-${place}`)\n    )}`,\n    status: 'done',\n    url: media.urlSmall,\n  }));\n\n  const onFinish = (values: CreateOfferMediaAssetForm) => {\n    params.offerId &&\n      dispatch(\n        createOfferMediaAsset({\n          ...values,\n          offerId: params.offerId,\n          placements: Object.fromEntries(values.placements.map((item) => [item.placement, item.placementType])),\n        })\n      );\n  };\n\n  const handleChange = (val: string, fieldKey: number) => {\n    const fieldsValue = form.getFieldsValue();\n\n    const newPlacements = fieldsValue.placements;\n    newPlacements[fieldKey] = {\n      placement: val,\n      placementType: undefined,\n    };\n\n    form.setFieldsValue({ ...fieldsValue, placements: newPlacements });\n  };\n\n  const fields = [{ name: ['placements'], value: [{ placement: undefined, placementType: undefined }] }];\n\n  return (\n    <>\n      {fileList.length > 0 && (\n        <Upload\n          className={css.upload}\n          listType=\"picture\"\n          fileList={fileList}\n          beforeUpload={beforeUpload}\n          onRemove={handleRemoveUpload}\n          onChange={handleChangeUpload}\n        />\n      )}\n      <div className={css.uploaderLayout}>\n        <Divider orientation=\"left\">{t('media.createTitle')}</Divider>\n        <Form form={form} onFinish={onFinish} autoComplete=\"off\" layout=\"vertical\" fields={fields}>\n          <Form.List name=\"placements\">\n            {(currFields, { add, remove }) => (\n              <>\n                {currFields.map((field) => (\n                  <div key={field.name} className={css.specialFormListItem}>\n                    <Form.Item\n                      label={<h3>{t('media.placement')}</h3>}\n                      name={[field.name, 'placement']}\n                      rules={[{ required: true, message: `${t('media.placementMessage')}!` }]}\n                    >\n                      <Select onChange={(value: string) => handleChange(value, field.name)}>\n                        {Object.keys(placementsData).map((placement) => (\n                          <Select.Option key={placement} value={placement}>\n                            {placement}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                    <Form.Item\n                      label={<h3>{t('media.placementType')}</h3>}\n                      name={[field.name, 'placementType']}\n                      rules={[{ required: true, message: `${t('media.placementMessage')}!` }]}\n                    >\n                      <Select\n                        mode=\"multiple\"\n                        disabled={!form.getFieldValue(['placements', `${field.name}`, 'placement'])}\n                      >\n                        {(placementsData[form.getFieldValue(['placements', `${field.name}`, 'placement'])] || []).map(\n                          (placement) => (\n                            <Select.Option key={placement} value={placement}>\n                              {placement}\n                            </Select.Option>\n                          )\n                        )}\n                      </Select>\n                    </Form.Item>\n                    <Form.Item label=\" \" className=\"remove-button-form-item\">\n                      <MinusCircleOutlined\n                        onClick={() => remove(field.name)}\n                        style={{ visibility: currFields.length === 1 ? 'hidden' : undefined }}\n                      />\n                    </Form.Item>\n                  </div>\n                ))}\n\n                <Form.Item>\n                  <Button type=\"link\" onClick={() => add()} icon={<PlusOutlined />}>\n                    {t('media.addPlacement')}\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.Item\n            name=\"file\"\n            rules={[{ required: true, message: `${t('media.fileMessage')}!` }]}\n            valuePropName=\"file\"\n            getValueFromEvent={normFile}\n          >\n            <Upload maxCount={1} beforeUpload={beforeUpload} listType=\"picture\">\n              <Button icon={<UploadOutlined />}> {dt('upload')}</Button>\n            </Upload>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {dt('create')}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default MediaAssetsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"layout-Q3SJD\",\"uploaderLayout\":\"uploaderLayout-Hl4xZ\",\"specialFormListItem\":\"specialFormListItem-FaedC\",\"upload\":\"upload-jgixh\"};","import { Table } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport React, { FC } from 'react';\n\nimport { ActivePost } from '../../types';\n\n// import css from './index.module.css';\n\nconst { Column } = Table;\n\ninterface ActivePostsProps {\n  data: ActivePost[];\n}\nconst ActivePosts: FC<ActivePostsProps> = ({ data }: ActivePostsProps) => {\n  const { t } = useTranslation('offers');\n\n  return (\n    <Table<ActivePost> dataSource={data} rowKey=\"id\" pagination={false} size=\"small\">\n      {/* <Column ellipsis title={t('activePosts.id')} dataIndex=\"id\" key=\"id\" /> */}\n\n      <Column ellipsis title={t('activePosts.creatorId')} dataIndex=\"creatorId\" key=\"creatorId\" width={'15%'} />\n      <Column\n        ellipsis\n        title={t('activePosts.mediaAssetId')}\n        dataIndex=\"mediaAssetId\"\n        key=\"mediaAssetId\"\n        width={'15%'}\n      />\n      <Column ellipsis title={t('activePosts.offerId')} dataIndex=\"offerId\" key=\"offerId\" width={'15%'} />\n      <Column\n        ellipsis\n        title={t('activePosts.socialNetwork')}\n        dataIndex=\"socialNetwork\"\n        key=\"socialNetwork\"\n        width={'20%'}\n      />\n      <Column ellipsis title={t('activePosts.state')} dataIndex=\"state\" key=\"state\" width={'10%'} />\n\n      <Column\n        ellipsis\n        title={t('activePosts.postLink')}\n        dataIndex=\"postLink\"\n        key=\"postLink\"\n        width={'20%'}\n        render={(postLink) => (\n          <a href={postLink} target=\"_blank\" rel=\"noreferrer\">\n            {postLink}\n          </a>\n        )}\n      />\n    </Table>\n  );\n};\n\nexport default ActivePosts;\n","import { Media } from 'features/admin-tasks/media/types';\nimport { RemoteData } from 'libs/remote';\nimport { RootState } from 'store';\n\nimport { ActivePost, AppForSelect, AppInfoShort, Offer, OfferInfo } from '../types';\n\nconst selectOffersData = (state: RootState): RemoteData<Offer[]> => state.offers.offersData;\n\nconst selectOfferInfo = (state: RootState): RemoteData<OfferInfo> => state.offers.offerInfo;\nconst selectOfferMedia = (state: RootState): RemoteData<Media[]> => state.offers.offerMedia;\nconst selectOfferActivePosts = (state: RootState): RemoteData<ActivePost[]> => state.offers.offerActivePosts;\n\nconst selectApplicationsForSelect = (state: RootState): RemoteData<AppForSelect[]> =>\n  state.offers.applicationsForSelect;\nconst selectAppInfo = (state: RootState): RemoteData<AppInfoShort> => state.offers.appInfo;\n\nexport {\n  selectOffersData,\n  selectOfferInfo,\n  selectOfferMedia,\n  selectOfferActivePosts,\n  selectApplicationsForSelect,\n  selectAppInfo,\n};\n"],"names":["props","ref","AntdIcon","icon","displayName","_interopRequireWildcard","_interopRequireDefault","exports","_extends2","_defineProperty2","_classnames","React","_configProvider","_classNames","_React$useContext","useContext","ConfigContext","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","orientationMargin","className","children","dashed","plain","restProps","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","orientationPrefix","concat","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","innerStyle","marginLeft","marginRight","createElement","role","style","countriesData","Option","appSelectFolder","fold","data","allowClear","map","dev","key","id","value","name","loading","disabled","mode","dispatch","useAppDispatch","params","useParams","applicationsForSelect","useAppSelector","selectApplicationsForSelect","useTranslation","form","useEffect","fetchApplicationsForSelect","formFields","useMemo","appId","budget","androidBaseReward","iosBaseReward","androidRewardByCountry","keys","country","price","iosRewardByCountry","undefined","css","onFinish","values","trimmedValues","trimObjectValues","createOffer","updateOffer","offerId","fields","autoComplete","layout","label","rules","required","message","add","remove","margin","field","countryCode","min","step","onClick","PlusOutlined","htmlType","size","dt","handleChangeStatus","updateOfferState","state","appName","appCategory","src","appIconUrl","PlaySquareOutlined","balance","noStyle","danger","placementsData","TIKTOK","INSTAGRAM","normFile","file","beforeUpload","fileList","media","uid","placements","socialNetworkKey","place","status","url","urlSmall","listType","onRemove","onChange","createOfferMediaAsset","fromEntries","item","placement","placementType","currFields","val","fieldKey","fieldsValue","getFieldsValue","newPlacements","setFieldsValue","handleChange","getFieldValue","visibility","valuePropName","getValueFromEvent","maxCount","UploadOutlined","Column","dataSource","rowKey","pagination","ellipsis","title","dataIndex","width","render","postLink","href","target","rel","selectOffersData","offers","offersData","selectOfferInfo","offerInfo","selectOfferMedia","offerMedia","selectOfferActivePosts","offerActivePosts"],"sourceRoot":""}