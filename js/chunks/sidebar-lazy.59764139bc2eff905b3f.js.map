{"version":3,"file":"js\\chunks\\sidebar-lazy.59764139bc2eff905b3f.js","mappings":"iRACA,EAA+C,iBCG/C,ECQoB,KAClB,MAAMA,GAAWC,EAAAA,EAAAA,OAEX,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,QAEvBC,GAAoBC,EAAAA,EAAAA,IAAeC,EAAAA,GAEnCC,EAAoB,KACxBH,GAAqBJ,GAASQ,EAAAA,EAAAA,MAA9B,EAGF,OACE,gCACE,wBAAMC,UFxBW,cEyBdC,EAAAA,EAAAA,KAAW,EAAGC,OAAMC,YAAWC,QAAOC,UAEnC,sBAAIC,IAAKJ,GACP,sBAAIF,UAAWO,GACb,gBAAC,KAAD,CACEF,KAAMA,EACNG,QAASV,EACTI,KAAMA,GAAQ,GACdO,GAAIN,GAAaA,EAAU,IAAMA,EAAU,GAAGD,KAAQ,IAAGA,KAAQC,EAAU,GAAGD,OAAU,IAAGA,KAE1FT,EAAEW,GAAS,MAGfD,GAAaA,EAAUO,QAAQC,IAAcA,EAASC,OAASD,EAASP,QAAOS,OAAS,GACvF,0BACGV,EAAUW,KAAKC,GACbA,EAAQX,MACP,sBAAIE,IAAKS,EAAQb,MACf,sBAAIF,UAAWO,GACb,gBAAC,KAAD,CACEC,QAASV,EACTO,KAAMU,EAAQV,KACdH,KAAMa,EAAQb,MAAQ,GACtBO,GAAK,IAAGP,KAAQa,EAAQb,QAEvBT,EAAEsB,EAAQX,OAAS,YATXY,SAqB/B,uBAAKhB,UF9DgE,kBE+DnE,gBAAC,KAAD,OAzCN,C","sources":["webpack://monetize-frontend-admin-panel/./src/core/layouts/sidebar/page/index.module.css?97bb","webpack://monetize-frontend-admin-panel/./src/core/layouts/sidebar/index.ts","webpack://monetize-frontend-admin-panel/./src/core/layouts/sidebar/page/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"menu-qbO_W\",\"menuItem\":\"menuItem-tvmKo\",\"controls\":\"controls-gEBfm\"};","// export { default as Sidebar } from './page';\r\n\r\nimport Sidebar from './page';\r\n\r\nexport default Sidebar;\r\n","import { routes } from 'routes';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { FC } from 'react';\r\n\r\nimport { CustomLink, LanguageSelect } from 'core/components';\r\nimport { Route } from 'types';\r\nimport { selectSidebarVisibility } from 'core/redux/selectors';\r\nimport { toggleSidebarVisibility } from 'core/redux/slice';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\n\r\nimport css from './index.module.css';\r\n\r\nconst Sidebar: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { t } = useTranslation('menu');\r\n\r\n  const sidebarVisibility = useAppSelector(selectSidebarVisibility);\r\n\r\n  const handleSelectRoute = () => {\r\n    sidebarVisibility && dispatch(toggleSidebarVisibility());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <menu className={css.menu}>\r\n        {routes.map(({ path, subRoutes, title, icon }: Route) => {\r\n          return (\r\n            <li key={path}>\r\n              <h3 className={css.menuItem}>\r\n                <CustomLink\r\n                  icon={icon}\r\n                  onClick={handleSelectRoute}\r\n                  path={path || ''}\r\n                  to={subRoutes && subRoutes[0] && subRoutes[0].path ? `/${path}/${subRoutes[0].path}` : `/${path}`}\r\n                >\r\n                  {t(title || '')}\r\n                </CustomLink>\r\n              </h3>\r\n              {subRoutes && subRoutes.filter((subRoute) => !subRoute.index && subRoute.title).length > 0 && (\r\n                <ol>\r\n                  {subRoutes.map((subPath) =>\r\n                    !subPath.title ? undefined : (\r\n                      <li key={subPath.path}>\r\n                        <h3 className={css.menuItem}>\r\n                          <CustomLink\r\n                            onClick={handleSelectRoute}\r\n                            icon={subPath.icon}\r\n                            path={subPath.path || ''}\r\n                            to={`/${path}/${subPath.path}`}\r\n                          >\r\n                            {t(subPath.title || '')}\r\n                          </CustomLink>\r\n                        </h3>\r\n                      </li>\r\n                    )\r\n                  )}\r\n                </ol>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </menu>\r\n      <div className={css.controls}>\r\n        <LanguageSelect />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["dispatch","useAppDispatch","t","useTranslation","sidebarVisibility","useAppSelector","selectSidebarVisibility","handleSelectRoute","toggleSidebarVisibility","className","routes","path","subRoutes","title","icon","key","css","onClick","to","filter","subRoute","index","length","map","subPath","undefined"],"sourceRoot":""}