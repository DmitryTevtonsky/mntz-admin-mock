{"version":3,"file":"js\\chunks\\app-update-lazy.2d8a6aa5b5c4807da608.js","mappings":"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","sources":["webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","webpack://monetize-frontend-admin-panel/./node_modules/@ant-design/icons/es/icons/EditOutlined.js","webpack://monetize-frontend-admin-panel/./src/features/applications/data/categories.ts","webpack://monetize-frontend-admin-panel/./src/features/applications/components/form/index.module.css?1522","webpack://monetize-frontend-admin-panel/./src/features/applications/components/form/index.tsx","webpack://monetize-frontend-admin-panel/./src/features/applications/components/form/form-display.tsx","webpack://monetize-frontend-admin-panel/./src/features/applications/redux/selectors.ts","webpack://monetize-frontend-admin-panel/./src/features/applications/routes/update/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","export const categoriesData = [\n  'Books',\n  'Crypto',\n  'Business',\n  'Developer Tools',\n  'Education',\n  'Entertainment',\n  'Finance',\n  'Food & Drink',\n  'Games',\n  'Graphics & Design',\n  'Health & Fitness',\n  'Lifestyle',\n  'Kids ',\n  'Magazines & Newspapers',\n  'Medical',\n  'Music',\n  'Navigation',\n  'News',\n  'Photo & Video',\n  'Productivity',\n  'Reference',\n  'Shopping',\n  'Social Networking',\n  'Sports',\n  'Travel',\n  'Utilities',\n  'Weather',\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"formLayout\":\"formLayout-LZQ2P\",\"form\":\"form-dlKxF\",\"submitButtonFormItem\":\"submitButtonFormItem-pJV3o\",\"defaultIconAvatar\":\"defaultIconAvatar-kMSCU\"};","import { Button, Form, Input, Select, Upload, message } from 'antd';\r\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { FC, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { ApplicationInfo, DeveloperForSelect } from '../../types';\r\nimport { categoriesData } from '../../data/categories';\r\nimport { createApplication, fetchDevelopersForSelect, updateApplication } from '../../redux/slice';\r\n\r\nimport { fold } from 'libs/remote';\r\nimport { selectDevelopersForSelect } from 'features/applications/redux/selectors';\r\nimport { trimObjectValues } from 'libs/utils';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\n\r\nimport css from './index.module.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst normFile = (e: UploadChangeParam) => e && e.file;\r\n\r\nconst isJpgOrPng = (file: UploadFile) => file.type === 'image/jpeg' || file.type === 'image/png';\r\nconst isLargerThen2MB = (file: UploadFile) => file.size && file.size / 1024 / 1024 < 2;\r\n\r\nconst beforeUpload = (file: UploadFile) => {\r\n  if (!isJpgOrPng(file)) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  if (!isLargerThen2MB(file)) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return false;\r\n};\r\n\r\nconst developerSelectFolder = fold<DeveloperForSelect[]>(\r\n  (data) => (\r\n    <Select>\r\n      {data.map((dev) => (\r\n        <Option key={dev.id} value={dev.id}>\r\n          {dev.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  ),\r\n  () => <></>,\r\n  () => <Select loading />,\r\n  () => <Select disabled />\r\n);\r\n\r\ninterface ApplicationFormProps {\r\n  mode: 'create' | 'update';\r\n  data?: ApplicationInfo;\r\n}\r\n\r\nconst ApplicationForm: FC<ApplicationFormProps> = ({ mode = 'update', data }: ApplicationFormProps) => {\r\n  const { t } = useTranslation('applications');\r\n  const dispatch = useAppDispatch();\r\n  const params = useParams();\r\n  const developersForSelect = useAppSelector(selectDevelopersForSelect);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDevelopersForSelect());\r\n  }, [dispatch]);\r\n\r\n  const [uploadFileList, setUploadFileList] = useState<UploadFile[]>(\r\n    data ? [{ uid: data.iconUrl, name: data.iconUrl, url: data.iconUrl }] : []\r\n  );\r\n\r\n  const fields = useMemo(() => {\r\n    return data\r\n      ? [\r\n        { name: ['appName'], value: data.appName },\r\n        { name: ['appCategory'], value: data.appCategory },\r\n        { name: ['iconFile'], value: data.iconFile || data.iconUrl },\r\n        { name: ['iconUrl'], value: data.iconUrl },\r\n        { name: ['developerId'], value: data.developerId },\r\n        { name: ['appStoreLink'], value: data.appStoreLink },\r\n        { name: ['googlePlayLink'], value: data.googlePlayLink },\r\n        { name: ['oneLinkSubdomain'], value: data.oneLinkSubdomain },\r\n        { name: ['oneLinkTemplateId'], value: data.oneLinkTemplateId },\r\n      ]\r\n      : undefined;\r\n  }, [data]);\r\n\r\n  const onFinish = (values: ApplicationInfo) => {\r\n    const trimmedValues = trimObjectValues<ApplicationInfo>(values);\r\n\r\n    mode === 'create'\r\n      ? dispatch(createApplication(trimmedValues))\r\n      : dispatch(updateApplication({ id: params.appId, ...trimmedValues }));\r\n  };\r\n\r\n  const handleChangeUpload = ({ fileList }: UploadChangeParam) => {\r\n    if (!fileList.length) {\r\n      form.setFieldsValue({\r\n        iconFile: undefined,\r\n        iconUrl: undefined,\r\n      });\r\n      return setUploadFileList([]);\r\n    }\r\n\r\n    form.setFieldsValue({\r\n      iconUrl: undefined,\r\n    });\r\n\r\n    const [file] = fileList;\r\n    if (!isJpgOrPng(file) || !isLargerThen2MB(file)) return;\r\n    setUploadFileList(fileList);\r\n  };\r\n\r\n  return (\r\n    <div className={css.formLayout}>\r\n      <Form\r\n        form={form}\r\n        className={css.form}\r\n        name={`developer-${mode}`}\r\n        onFinish={onFinish}\r\n        fields={fields || undefined}\r\n        autoComplete=\"off\"\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          label={<h3>{t('form.appName')}:</h3>}\r\n          name=\"appName\"\r\n          rules={[{ required: true, message: `${t('form.appNameMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.appCategory')}:</h3>}\r\n          name=\"appCategory\"\r\n          rules={[{ required: true, message: `${t('form.appCategoryMessage')}!` }]}\r\n        >\r\n          <Select allowClear>\r\n            {categoriesData.map((category) => (\r\n              <Option key={category} value={category}>\r\n                {category}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"iconUrl\" noStyle>\r\n          <></>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.iconFile')}:</h3>}\r\n          name=\"iconFile\"\r\n          valuePropName=\"file\"\r\n          getValueFromEvent={normFile}\r\n          rules={[{ required: true, message: `${t('form.iconFileMessage')}!` }]}\r\n        >\r\n          <Upload\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChangeUpload}\r\n            maxCount={1}\r\n            listType=\"picture-card\"\r\n            fileList={uploadFileList}\r\n          >\r\n            <UploadOutlined />\r\n          </Upload>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.developer')}:</h3>}\r\n          name=\"developerId\"\r\n          rules={[{ required: true, message: `${t('form.developerMessage')}!` }]}\r\n        >\r\n          {developerSelectFolder(developersForSelect)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.appStoreLink')}:</h3>}\r\n          name=\"appStoreLink\"\r\n          rules={[\r\n            { required: true, message: `${t('form.appStoreLinkMessage')}!` },\r\n            {\r\n              message: `${t('form.linkNotValidMessage')}: https://apps.apple.com/app/apple-store/id...`,\r\n              pattern: new RegExp(/(https:\\/\\/)(apps.apple.com\\/app\\/apple-store\\/id[0-9]{1,10}\\b)/),\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.googlePlayLink')}:</h3>}\r\n          name=\"googlePlayLink\"\r\n          rules={[\r\n            {\r\n              message: `${t('form.linkNotValidMessage')}: https://play.google.com/store/apps/details?id=...`,\r\n              pattern: new RegExp(/(https:\\/\\/)(play.google.com\\/store\\/apps\\/details[?]id=[-a-zA-Z0-9@:%_.~#?&//=])/),\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.oneLinkSubdomain')}:</h3>}\r\n          name=\"oneLinkSubdomain\"\r\n          rules={[{ required: true, message: `${t('form.oneLinkSubdomainMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={<h3>{t('form.oneLinkTemplateId')}:</h3>}\r\n          name=\"oneLinkTemplateId\"\r\n          rules={[{ required: true, message: `${t('form.oneLinkTemplateIdMessage')}!` }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item className={css.submitButtonFormItem}>\r\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\" shape=\"round\">\r\n            {mode === 'create' ? t('createApplication') : t('updateApplication')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationForm;\r\n","import { Avatar, Button, Form } from 'antd';\r\nimport { EditOutlined, PlaySquareOutlined } from '@ant-design/icons';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { FC } from 'react';\r\n\r\nimport { ApplicationInfo } from '../../types';\r\nimport css from './index.module.css';\r\n\r\ninterface ApplicationFormDisplayProps {\r\n  data: ApplicationInfo;\r\n}\r\nconst ApplicationFormDisplay: FC<ApplicationFormDisplayProps> = ({ data }: ApplicationFormDisplayProps) => {\r\n  const params = useParams();\r\n  const { t } = useTranslation('applications');\r\n  const { t: dt } = useTranslation();\r\n\r\n  return (\r\n    <div className={css.formLayout}>\r\n      <Form className={css.form} layout=\"vertical\">\r\n        <Form.Item label={<h3>{t('form.appName')}:</h3>}>\r\n          <h4>{data.appName || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.appCategory')}:</h3>}>\r\n          <h4>{data.appCategory || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.iconFile')}:</h3>}>\r\n          <Avatar src={data.iconUrl} size={100} icon={<PlaySquareOutlined className={css.defaultIconAvatar} />} />\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.developer')}:</h3>}>\r\n          <h4>{data.developerName || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.appStoreLink')}:</h3>}>\r\n          <h4>{data.appStoreLink || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.googlePlayLink')}:</h3>}>\r\n          <h4>{data.googlePlayLink || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.oneLinkSubdomain')}:</h3>}>\r\n          <h4>{data.oneLinkSubdomain || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item label={<h3>{t('form.oneLinkTemplateId')}:</h3>}>\r\n          <h4>{data.oneLinkTemplateId || dt('n/a')}</h4>\r\n        </Form.Item>\r\n        <Form.Item className={css.submitButtonFormItem}>\r\n          <Link to={`/applications/update/${params.appId}`}>\r\n            <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n              <EditOutlined />\r\n            </Button>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationFormDisplay;\r\n","import { RemoteData } from 'libs/remote';\nimport { RootState } from 'store';\n\nimport { Application, ApplicationInfo, DeveloperForSelect } from '../types';\n\nconst selectData = (state: RootState): RemoteData<Application[]> => state.applications.data;\nconst selectApplicationInfo = (state: RootState): RemoteData<ApplicationInfo> => state.applications.applicationInfo;\nconst selectDevelopersForSelect = (state: RootState): RemoteData<DeveloperForSelect[]> =>\n  state.applications.developersForSelect;\n\nexport { selectData, selectApplicationInfo, selectDevelopersForSelect };\n","import { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport React, { FC, useEffect } from 'react';\n\nimport { ErrorHolder, Loader, Subheader } from 'core/components';\nimport { fold } from 'libs/remote';\nimport { useAppDispatch, useAppSelector } from 'store';\n\nimport { ApplicationForm } from '../../components';\nimport { ApplicationInfo } from '../../types';\nimport { readApplication } from '../../redux/slice';\nimport { selectApplicationInfo } from '../../redux/selectors';\n\nconst updateApplicationFolder = fold<ApplicationInfo>(\n  (data) => <ApplicationForm mode=\"update\" data={data} />,\n  () => <></>,\n  () => <Loader />,\n  (error) => <ErrorHolder error={error} />\n);\n\nconst UpdateApplication: FC = () => {\n  const { t } = useTranslation('applications');\n\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const appInfo = useAppSelector(selectApplicationInfo);\n\n  useEffect(() => {\n    params.appId && dispatch(readApplication(params.appId));\n  }, [dispatch, params.appId]);\n\n  return (\n    <>\n      <Subheader goBack goBackTo=\"/applications\" title={t('updateApplicationTitle')} />\n      {updateApplicationFolder(appInfo)}\n    </>\n  );\n};\n\nexport default UpdateApplication;\n"],"names":["props","ref","AntdIcon","icon","displayName","categoriesData","Option","normFile","e","file","isJpgOrPng","type","isLargerThen2MB","size","beforeUpload","message","developerSelectFolder","fold","data","map","dev","key","id","value","name","loading","disabled","mode","t","useTranslation","dispatch","useAppDispatch","params","useParams","developersForSelect","useAppSelector","selectDevelopersForSelect","form","useEffect","fetchDevelopersForSelect","uploadFileList","setUploadFileList","useState","uid","iconUrl","url","fields","useMemo","appName","appCategory","iconFile","developerId","appStoreLink","googlePlayLink","oneLinkSubdomain","oneLinkTemplateId","undefined","className","css","onFinish","values","trimmedValues","trimObjectValues","createApplication","updateApplication","appId","autoComplete","layout","label","rules","required","allowClear","category","noStyle","valuePropName","getValueFromEvent","onChange","fileList","length","setFieldsValue","maxCount","listType","UploadOutlined","pattern","RegExp","htmlType","shape","dt","src","PlaySquareOutlined","developerName","to","EditOutlined","selectData","state","applications","selectApplicationInfo","applicationInfo","updateApplicationFolder","error","appInfo","readApplication","goBack","goBackTo","title"],"sourceRoot":""}